ARG FROM_IMAGE=ros:melodic
ARG OVERLAY_WS=/opt/ros/overlay_ws

# multi-stage for caching
FROM $FROM_IMAGE AS cacher

# clone overlay source
ARG OVERLAY_WS
WORKDIR $OVERLAY_WS/src
RUN git clone https://github.com/Unity-Technologies/ROS-TCP-Endpoint.git -b v0.4.0 --depth 1 && \
    git clone https://github.com/Unity-Technologies/Unity-Robotics-Hub.git -b v0.4.0 --depth 1 && \
    mv Unity-Robotics-Hub/tutorials/ros_packages/robotics_demo . && rm -rf Unity-Robotics-Hub

# copy manifests for caching
WORKDIR /opt
RUN mkdir -p /tmp/opt && \
    find ./ -name "package.xml" | \
      xargs cp --parents -t /tmp/opt || true


# multi-stage for building
FROM $FROM_IMAGE AS builder

# install overlay dependencies
ARG OVERLAY_WS
WORKDIR $OVERLAY_WS
COPY --from=cacher /tmp/$OVERLAY_WS/src ./src
RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
    apt-get update && rosdep install -y \
      --from-paths src/ROS-TCP-Endpoint \
    && rm -rf /var/lib/apt/lists/*

# build overlay source
COPY --from=cacher $OVERLAY_WS/src ./src
RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
    sed -i 's/127.0.0.1/0.0.0.0/g' src/ROS-TCP-Endpoint/config/params.yaml && \
    sed -i 's/192.168.1.116/0.0.0.0/g' src/robotics_demo/launch/robo_demo.launch && \
    sed -i 's/192.168.1.105/172.17.0.1/g' src/robotics_demo/launch/robo_demo.launch && \
    chmod +x src/ROS-TCP-Endpoint/src/ros_tcp_endpoint/*.py && \
    chmod +x src/robotics_demo/scripts/*.py && \
    catkin_make 

# source entrypoint setup
ENV OVERLAY_WS $OVERLAY_WS
ADD ./server_endpoint.py src/robotics_demo/scripts/
RUN sed --in-place --expression \
      '$isource "$OVERLAY_WS/devel/setup.bash"' \
      /ros_entrypoint.sh

# run launch file

